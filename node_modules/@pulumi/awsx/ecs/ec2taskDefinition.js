"use strict";
// *** WARNING: this file was generated by pulumi-gen-awsx. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EC2TaskDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Create a TaskDefinition resource with the given unique name, arguments, and options.
 * Creates required log-group and task & execution roles.
 * Presents required Service load balancers if target group included in port mappings.
 */
class EC2TaskDefinition extends pulumi.ComponentResource {
    /**
     * Returns true if the given object is an instance of EC2TaskDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EC2TaskDefinition.__pulumiType;
    }
    /**
     * Create a EC2TaskDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["containers"] = args ? args.containers : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["ephemeralStorage"] = args ? args.ephemeralStorage : undefined;
            resourceInputs["executionRole"] = args ? args.executionRole : undefined;
            resourceInputs["family"] = args ? args.family : undefined;
            resourceInputs["inferenceAccelerators"] = args ? args.inferenceAccelerators : undefined;
            resourceInputs["ipcMode"] = args ? args.ipcMode : undefined;
            resourceInputs["logGroup"] = args ? args.logGroup : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["networkMode"] = args ? args.networkMode : undefined;
            resourceInputs["pidMode"] = args ? args.pidMode : undefined;
            resourceInputs["placementConstraints"] = args ? args.placementConstraints : undefined;
            resourceInputs["proxyConfiguration"] = args ? args.proxyConfiguration : undefined;
            resourceInputs["runtimePlatform"] = args ? args.runtimePlatform : undefined;
            resourceInputs["skipDestroy"] = args ? args.skipDestroy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taskRole"] = args ? args.taskRole : undefined;
            resourceInputs["trackLatest"] = args ? args.trackLatest : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["loadBalancers"] = undefined /*out*/;
            resourceInputs["taskDefinition"] = undefined /*out*/;
        }
        else {
            resourceInputs["executionRole"] = undefined /*out*/;
            resourceInputs["loadBalancers"] = undefined /*out*/;
            resourceInputs["logGroup"] = undefined /*out*/;
            resourceInputs["taskDefinition"] = undefined /*out*/;
            resourceInputs["taskRole"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EC2TaskDefinition.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}
exports.EC2TaskDefinition = EC2TaskDefinition;
/** @internal */
EC2TaskDefinition.__pulumiType = 'awsx:ecs:EC2TaskDefinition';
//# sourceMappingURL=ec2taskDefinition.js.map