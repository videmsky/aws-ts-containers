import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
export declare class GraphQLApi extends pulumi.CustomResource {
    /**
     * Get an existing GraphQLApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GraphQLApiState, opts?: pulumi.CustomResourceOptions): GraphQLApi;
    /**
     * Returns true if the given object is an instance of GraphQLApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GraphQLApi;
    /**
     * One or more additional authentication providers for the GraphqlApi. Defined below.
     */
    readonly additionalAuthenticationProviders: pulumi.Output<outputs.appsync.GraphQLApiAdditionalAuthenticationProvider[] | undefined>;
    /**
     * ARN
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
     */
    readonly authenticationType: pulumi.Output<string>;
    /**
     * Sets the value of the GraphQL API to enable (`ENABLED`) or disable (`DISABLED`) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see [GraphQL introspection](https://graphql.org/learn/introspection/).
     */
    readonly introspectionConfig: pulumi.Output<string | undefined>;
    /**
     * Nested argument containing Lambda authorizer configuration. Defined below.
     */
    readonly lambdaAuthorizerConfig: pulumi.Output<outputs.appsync.GraphQLApiLambdaAuthorizerConfig | undefined>;
    /**
     * Nested argument containing logging configuration. Defined below.
     */
    readonly logConfig: pulumi.Output<outputs.appsync.GraphQLApiLogConfig | undefined>;
    /**
     * User-supplied name for the GraphqlApi.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Nested argument containing OpenID Connect configuration. Defined below.
     */
    readonly openidConnectConfig: pulumi.Output<outputs.appsync.GraphQLApiOpenidConnectConfig | undefined>;
    /**
     * The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is `0` (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between `1` and `75` nested levels. This field will produce a limit error if the operation falls out of bounds.
     *
     * Note that fields can still be set to nullable or non-nullable. If a non-nullable field produces an error, the error will be thrown upwards to the first nullable field available.
     */
    readonly queryDepthLimit: pulumi.Output<number | undefined>;
    /**
     * The maximum number of resolvers that can be invoked in a single request. The default value is `0` (or unspecified), which will set the limit to `10000`. When specified, the limit value can be between `1` and `10000`. This field will produce a limit error if the operation falls out of bounds.
     */
    readonly resolverCountLimit: pulumi.Output<number | undefined>;
    /**
     * Schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
     */
    readonly schema: pulumi.Output<string | undefined>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Map of URIs associated with the APIE.g., `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
     */
    readonly uris: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Amazon Cognito User Pool configuration. Defined below.
     */
    readonly userPoolConfig: pulumi.Output<outputs.appsync.GraphQLApiUserPoolConfig | undefined>;
    /**
     * Sets the value of the GraphQL API to public (`GLOBAL`) or private (`PRIVATE`). If no value is provided, the visibility will be set to `GLOBAL` by default. This value cannot be changed once the API has been created.
     */
    readonly visibility: pulumi.Output<string | undefined>;
    /**
     * Whether tracing with X-ray is enabled. Defaults to false.
     */
    readonly xrayEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Create a GraphQLApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GraphQLApiArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering GraphQLApi resources.
 */
export interface GraphQLApiState {
    /**
     * One or more additional authentication providers for the GraphqlApi. Defined below.
     */
    additionalAuthenticationProviders?: pulumi.Input<pulumi.Input<inputs.appsync.GraphQLApiAdditionalAuthenticationProvider>[]>;
    /**
     * ARN
     */
    arn?: pulumi.Input<string>;
    /**
     * Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Sets the value of the GraphQL API to enable (`ENABLED`) or disable (`DISABLED`) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see [GraphQL introspection](https://graphql.org/learn/introspection/).
     */
    introspectionConfig?: pulumi.Input<string>;
    /**
     * Nested argument containing Lambda authorizer configuration. Defined below.
     */
    lambdaAuthorizerConfig?: pulumi.Input<inputs.appsync.GraphQLApiLambdaAuthorizerConfig>;
    /**
     * Nested argument containing logging configuration. Defined below.
     */
    logConfig?: pulumi.Input<inputs.appsync.GraphQLApiLogConfig>;
    /**
     * User-supplied name for the GraphqlApi.
     */
    name?: pulumi.Input<string>;
    /**
     * Nested argument containing OpenID Connect configuration. Defined below.
     */
    openidConnectConfig?: pulumi.Input<inputs.appsync.GraphQLApiOpenidConnectConfig>;
    /**
     * The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is `0` (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between `1` and `75` nested levels. This field will produce a limit error if the operation falls out of bounds.
     *
     * Note that fields can still be set to nullable or non-nullable. If a non-nullable field produces an error, the error will be thrown upwards to the first nullable field available.
     */
    queryDepthLimit?: pulumi.Input<number>;
    /**
     * The maximum number of resolvers that can be invoked in a single request. The default value is `0` (or unspecified), which will set the limit to `10000`. When specified, the limit value can be between `1` and `10000`. This field will produce a limit error if the operation falls out of bounds.
     */
    resolverCountLimit?: pulumi.Input<number>;
    /**
     * Schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
     */
    schema?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Map of URIs associated with the APIE.g., `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
     */
    uris?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Amazon Cognito User Pool configuration. Defined below.
     */
    userPoolConfig?: pulumi.Input<inputs.appsync.GraphQLApiUserPoolConfig>;
    /**
     * Sets the value of the GraphQL API to public (`GLOBAL`) or private (`PRIVATE`). If no value is provided, the visibility will be set to `GLOBAL` by default. This value cannot be changed once the API has been created.
     */
    visibility?: pulumi.Input<string>;
    /**
     * Whether tracing with X-ray is enabled. Defaults to false.
     */
    xrayEnabled?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a GraphQLApi resource.
 */
export interface GraphQLApiArgs {
    /**
     * One or more additional authentication providers for the GraphqlApi. Defined below.
     */
    additionalAuthenticationProviders?: pulumi.Input<pulumi.Input<inputs.appsync.GraphQLApiAdditionalAuthenticationProvider>[]>;
    /**
     * Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
     */
    authenticationType: pulumi.Input<string>;
    /**
     * Sets the value of the GraphQL API to enable (`ENABLED`) or disable (`DISABLED`) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see [GraphQL introspection](https://graphql.org/learn/introspection/).
     */
    introspectionConfig?: pulumi.Input<string>;
    /**
     * Nested argument containing Lambda authorizer configuration. Defined below.
     */
    lambdaAuthorizerConfig?: pulumi.Input<inputs.appsync.GraphQLApiLambdaAuthorizerConfig>;
    /**
     * Nested argument containing logging configuration. Defined below.
     */
    logConfig?: pulumi.Input<inputs.appsync.GraphQLApiLogConfig>;
    /**
     * User-supplied name for the GraphqlApi.
     */
    name?: pulumi.Input<string>;
    /**
     * Nested argument containing OpenID Connect configuration. Defined below.
     */
    openidConnectConfig?: pulumi.Input<inputs.appsync.GraphQLApiOpenidConnectConfig>;
    /**
     * The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is `0` (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between `1` and `75` nested levels. This field will produce a limit error if the operation falls out of bounds.
     *
     * Note that fields can still be set to nullable or non-nullable. If a non-nullable field produces an error, the error will be thrown upwards to the first nullable field available.
     */
    queryDepthLimit?: pulumi.Input<number>;
    /**
     * The maximum number of resolvers that can be invoked in a single request. The default value is `0` (or unspecified), which will set the limit to `10000`. When specified, the limit value can be between `1` and `10000`. This field will produce a limit error if the operation falls out of bounds.
     */
    resolverCountLimit?: pulumi.Input<number>;
    /**
     * Schema definition, in GraphQL schema language format. This provider cannot perform drift detection of this configuration.
     */
    schema?: pulumi.Input<string>;
    /**
     * Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Amazon Cognito User Pool configuration. Defined below.
     */
    userPoolConfig?: pulumi.Input<inputs.appsync.GraphQLApiUserPoolConfig>;
    /**
     * Sets the value of the GraphQL API to public (`GLOBAL`) or private (`PRIVATE`). If no value is provided, the visibility will be set to `GLOBAL` by default. This value cannot be changed once the API has been created.
     */
    visibility?: pulumi.Input<string>;
    /**
     * Whether tracing with X-ray is enabled. Defaults to false.
     */
    xrayEnabled?: pulumi.Input<boolean>;
}
